# Remove existing node_modules and lock file
rmdir /s /q node_modules
del package-lock.json

# Install all dependencies fresh
npm install @tanstack/react-router @tanstack/react-query
npm install react-hook-form @hookform/resolvers zod
npm install i18next react-i18next @types/i18next @types/react-i18next
npm install axios
npm install --save-dev @types/axios @types/i18next @types/react-i18next 
npm install --save-dev @tsconfig/vite-react 
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p 
npm install lodash
npm install --save-dev @types/lodash 

# Create a new directory for the backend
mkdir audio-api
cd audio-api

# Initialize a new Node.js project
npm init -y

# Install required dependencies
npm install express cors jsonwebtoken bcryptjs
npm install --save-dev typescript @types/express @types/cors @types/node ts-node-dev 

cd audio-api
npm install express cors
npm install --save-dev @types/express @types/cors typescript ts-node-dev 

# Terminal 1 - Frontend (from project root)
npm run dev

# Terminal 2 - Backend (from audio-api directory)
cd audio-api
npm run dev 

npm install @radix-ui/react-slot @radix-ui/react-dialog class-variance-authority clsx tailwind-merge 

mkdir src/pages
mv src/components/Login.tsx src/pages/Login.tsx 

# Create directories
md src\pages

# Move the file (if it exists)
move src\components\Login.tsx src\pages\Login.tsx

# If the file doesn't exist yet, we'll create it
type nul > src\pages\Login.tsx 

cd audio-api
npm install --save-dev @types/bcryptjs @types/jsonwebtoken 

cd audio-api
npm install @prisma/client
npm install --save-dev prisma
npx prisma db push
npx prisma generate 

cd audio-api
rmdir /s /q prisma\migrations
del /f /q prisma\dev.db
npx prisma migrate reset --force
npx prisma migrate dev --name init --create-only
npx prisma generate
npx prisma db push 

cd audio-api
del src\routes\transcription.ts 